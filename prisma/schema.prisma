generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          String   @id @default(cuid())
  clerkId     String   @unique
  firstName   String
  lastName    String
  email       String   @unique
  phoneNumber String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Project {
  id         String        @id @default(cuid())
  projectId  String        @unique
  location   String
  clientName String
  startDate  DateTime
  endDate    DateTime?
  status     ProjectStatus @default(ONGOING)

  workers    WorkerAssignment[]
  machinery  MachineryUsage[]
  materials  MaterialUsage[]
  attendance Attendance[]
  advances   Advance[]
  images     ProjectImage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ProjectStatus {
  ONGOING
  COMPLETED
  SUSPENDED
}

model Worker {
  id          String        @id @default(cuid())
  name        String
  type        WorkerType
  hourlyRate  Float
  phoneNumber String?
  isActive    Boolean       @default(true)
  photoUrl    String?
  faceId      String?
  photos      WorkerPhoto[]

  assignments WorkerAssignment[]
  attendance  Attendance[]
  advances    Advance[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum WorkerType {
  FOREMAN
  MASON
  BALDAR
  COOLIE
  MACHINERY_OPERATOR
  OFFICE_STAFF
}

model WorkerAssignment {
  id        String    @id @default(cuid())
  worker    Worker    @relation(fields: [workerId], references: [id])
  workerId  String
  project   Project   @relation(fields: [projectId], references: [id])
  projectId String
  startDate DateTime
  endDate   DateTime?
  isActive  Boolean   @default(true)

  @@unique([workerId, projectId])
}

model Attendance {
  id                String   @id @default(cuid())
  worker            Worker   @relation(fields: [workerId], references: [id])
  workerId          String
  project           Project  @relation(fields: [projectId], references: [id])
  projectId         String
  date              DateTime @default(now())
  present           Boolean  @default(false)
  hoursWorked       Float    @default(0)
  overtime          Float    @default(0)
  photoUrl          String?
  confidence        Float?
  workerInPhoto     String?
  workerOutPhoto    String?
  inConfidence      Float?
  outConfidence     Float?
  isPartiallyMarked Boolean  @default(false)

  createdAt DateTime @default(now())

  @@unique([workerId, projectId, date])
  @@index([projectId])
}

model Advance {
  id        String   @id @default(cuid())
  worker    Worker   @relation(fields: [workerId], references: [id])
  workerId  String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  amount    Float
  date      DateTime
  notes     String?
  isPaid    Boolean  @default(false)

  createdAt DateTime @default(now())

  @@index([workerId])
  @@index([projectId])
}

enum MachineryType {
  JCB
  SLM
}

enum JCBSubtype {
  BACKHOE
  PROCLAIM_81
  PROCLAIM_140
  PROCLAIM_210
}

enum JCBPartType {
  BUCKET
  BRAKES
}

enum SLMSubtype {
  SLM_4_3
  SLM_2_2
  SLM_2_1
  MANUAL_MIXER
}

model MachineryUsage {
  id          String        @id @default(cuid())
  project     Project       @relation(fields: [projectId], references: [id])
  projectId   String
  type        MachineryType
  jcbSubtype  JCBSubtype?
  jcbPartType JCBPartType?
  slmSubtype  SLMSubtype?
  hoursUsed   Float
  hourlyRate  Float
  date        DateTime
  totalCost   Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

enum MaterialType {
  STEEL
  CEMENT
  WASHING_SAND
  FINE_SAND
  GRIT_10MM
  GRIT_20MM
  GRIT_40MM
  BRICK
  STONE
  WATER
}

model MaterialUsage {
  id        String       @id @default(cuid())
  project   Project      @relation(fields: [projectId], references: [id])
  projectId String
  type      MaterialType
  volume    Float
  cost      Float
  date      DateTime     @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

model ProjectImage {
  id        String   @id @default(cuid())
  url       String
  filename  String
  type      String   @default("gallery")
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  createdAt DateTime @default(now())

  @@index([projectId])
}

model WorkerPhoto {
  id        String   @id @default(cuid())
  url       String
  worker    Worker   @relation(fields: [workerId], references: [id])
  workerId  String
  projectId String
  tag       String
  createdAt DateTime @default(now())

  @@index([workerId])
  @@index([projectId])
}

enum AdminWorkerType {
  ENGINEER
  DRIVER
  MACHINERY_OPERATOR
}

model AdminWorker {
  id          String          @id @default(cuid())
  name        String
  type        AdminWorkerType
  dailyIncome Float
  phoneNumber String?
  isActive    Boolean         @default(true)
  photoUrl    String?
  faceId      String?

  attendance AdminAttendance[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([type])
}

model AdminAttendance {
  id         String      @id @default(cuid())
  worker     AdminWorker @relation(fields: [workerId], references: [id])
  workerId   String
  date       DateTime    @default(now())
  present    Boolean     @default(false)
  photoUrl   String?
  confidence Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([workerId, date])
  @@index([workerId])
}
